{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Parameters" : {

    "KeyPair" :{
      "Type" : "String",
      "Default" : "KeyPair-SaoPaulo"
    }

  },

  "Mappings" : {
    "AMIMap" : {
      "us-east-1" : { "HVM64" : "ami-013be31976ca2c322"},
      "sa-east-1" : { "HVM64" : "ami-0160a8b6087883cb6"}
    },

    "AZMap" : {
      "us-east-1" : {"AZ" : "us-east-1a"},
      "sa-east-1" : {"AZ" : "sa-east-1a"}
    },

    "SubnetsMap" : {
      "us-east-1" : {"subnet" : "subnet-b7149ed0"},
      "sa-east-1" : {"subnet" : "subnet-525aa834"}
    }
  },

  "Resources" : {

    "EC2Instance1" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AZMap", { "Ref" : "AWS::Region" }, "AZ"]},
        "KeyName" : { "Ref" : "KeyPair" },
        "NetworkInterfaces": [ {    
              "AssociatePublicIpAddress" : "True",
              "DeleteOnTermination" : "True",
              "SubnetId" : { "Fn::FindInMap" : [ "SubnetsMap", { "Ref" : "AWS::Region" }, "subnet"]},
              "DeviceIndex" : "0"
              } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
           "#!/bin/bash -x\n",
           "yum -y install git\n",
           "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash\n",
           ". /.nvm/nvm.sh\n",
           "nvm install 4.5.0\n",
           "git clone https://github.com/bemer/tech-u.git\n",
           "cd tech-u\n",
           "npm install\n",
           "npm install --global gulp\n",
           "gulp\n",
           "sudo amazon-linux-extras install -y nginx1.12\n",
           "sudo cp -rf /tech-u /usr/share/nginx/html/\n",
           "sudo nginx\n",
           "sudo chkconfig nginx on\n",

           
           "sudo su\n",
           "mkdir /tmp/ssm\n",
           "cd /tmp/ssm\n",
           "yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\n",
           "status amazon-ssm-agent\n",
           "start amazon-ssm-agent"
            ] ] } },
        "IamInstanceProfile" : {"Ref" : "InstanceProfile"},
        "ImageId" : { "Fn::FindInMap" : [ "AMIMap", { "Ref" : "AWS::Region" }, "HVM64"]}
      }
    },

    "Role": {
    "Type": "AWS::IAM::Role",
    "Properties": {
      "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
            },
            "Path": "/"
         }
      },

  "RolePolicies": {
     "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "ssm:DescribeAssociation",
                        "ssm:GetDeployablePatchSnapshotForInstance",
                        "ssm:GetDocument",
                        "ssm:GetManifest",
                        "ssm:GetParameters",
                        "ssm:ListAssociations",
                        "ssm:ListInstanceAssociations",
                        "ssm:PutInventory",
                        "ssm:PutComplianceItems",
                        "ssm:PutConfigurePackageResult",
                        "ssm:UpdateAssociationStatus",
                        "ssm:UpdateInstanceAssociationStatus",
                        "ssm:UpdateInstanceInformation"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ssmmessages:CreateControlChannel",
                        "ssmmessages:CreateDataChannel",
                        "ssmmessages:OpenControlChannel",
                        "ssmmessages:OpenDataChannel"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2messages:AcknowledgeMessage",
                        "ec2messages:DeleteMessage",
                        "ec2messages:FailMessage",
                        "ec2messages:GetEndpoint",
                        "ec2messages:GetMessages",
                        "ec2messages:SendReply"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "cloudwatch:PutMetricData"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:DescribeInstanceStatus"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ds:CreateComputer",
                        "ds:DescribeDirectories"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:DescribeLogGroups",
                        "logs:DescribeLogStreams",
                        "logs:PutLogEvents"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "s3:GetBucketLocation",
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:GetEncryptionConfiguration",
                        "s3:AbortMultipartUpload",
                        "s3:ListMultipartUploadParts",
                        "s3:ListBucket",
                        "s3:ListBucketMultipartUploads"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "Roles": [ {"Ref": "Role"} ]
      }
    },

      "InstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {"Ref": "Role"} ]
         }
      }
  }
}
